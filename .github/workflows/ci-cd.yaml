name: CI/CD Pipeline
run-name: ${{ github.actor }} is Deploying

on:
  push:
    branches:
      - main  # Trigger when pushing to the main branch
    tags:
      - '*'  # Trigger when a new tag is pushed
  workflow_dispatch:  # Allow manual triggering from GitHub UI

jobs:
  # Job for the vote service
  build-and-deploy-vote:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.sha }}  # Use commit SHA as image tag
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push vote service
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/vote:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKER_USERNAME }}/vote:latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install kubectl
        run: |
          curl -LO https://dl.k8s.io/release/v1.32.0/bin/linux/amd64/kubectl
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.AWS_CLUSTER }}

      - name: Generate and Deploy vote service
        run: |
          sudo apt-get update && sudo apt-get install -y gettext-base
          export IMAGE_NAME="docker.io/${{ secrets.DOCKER_USERNAME }}/vote:${{ env.IMAGE_TAG }}"
          envsubst < k8s/vote-deployment.template.yaml > k8s/vote-deployment.yaml
          kubectl apply -f k8s/vote-deployment.yaml

  # Job for the result service
  build-and-deploy-result:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push result service
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/result:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKER_USERNAME }}/result:latest

      - name: Generate and Deploy result service
        run: |
          sudo apt-get update && sudo apt-get install -y gettext-base
          export IMAGE_NAME="docker.io/${{ secrets.DOCKER_USERNAME }}/result:${{ env.IMAGE_TAG }}"
          envsubst < k8s/result-deployment.template.yaml > k8s/result-deployment.yaml
          kubectl apply -f k8s/result-deployment.yaml

  # Job for the worker service
  build-and-deploy-worker:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push worker service
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/worker:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKER_USERNAME }}/worker:latest

      - name: Deploy worker service
        run: |
          kubectl apply -f k8s/worker-deployment.yaml
